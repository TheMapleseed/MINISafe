name: MINISafe Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
          
      - name: Upload Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: minisafe-linux-x86_64
          path: target/release/microvm
          
  macos:
    name: Build macOS Binary
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
          
      - name: Upload macOS binary
        uses: actions/upload-artifact@v3
        with:
          name: minisafe-macos-x86_64
          path: target/release/microvm
          
  create_release:
    name: Create GitHub Release
    needs: [build, macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Generate changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"* %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: minisafe-linux-x86_64
          path: ./dist/linux
          
      - name: Download macOS binary
        uses: actions/download-artifact@v3
        with:
          name: minisafe-macos-x86_64
          path: ./dist/macos
          
      - name: Prepare binaries
        run: |
          mkdir -p ./release
          cp ./dist/linux/microvm ./release/minisafe-linux-x86_64
          cp ./dist/macos/microvm ./release/minisafe-macos-x86_64
          chmod +x ./release/*
          cd ./release
          tar -czvf minisafe-linux-x86_64.tar.gz minisafe-linux-x86_64
          tar -czvf minisafe-macos-x86_64.tar.gz minisafe-macos-x86_64
          sha256sum * > SHA256SUMS
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: MINISafe ${{ github.ref }}
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Hashes
            ```
            $(cat ./release/SHA256SUMS)
            ```
          draft: false
          prerelease: false
          
      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/minisafe-linux-x86_64.tar.gz
          asset_name: minisafe-linux-x86_64.tar.gz
          asset_content_type: application/gzip
          
      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/minisafe-macos-x86_64.tar.gz
          asset_name: minisafe-macos-x86_64.tar.gz
          asset_content_type: application/gzip
          
      - name: Upload Checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/SHA256SUMS
          asset_name: SHA256SUMS
          asset_content_type: text/plain